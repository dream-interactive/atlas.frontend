import { Component, OnInit } from '@angular/core';
import {FormControl, FormGroup, Validators} from '@angular/forms';

@Component({
  selector: 'app-project-modal',
  templateUrl: './project-modal.component.html',
  styleUrls: ['./project-modal.component.scss']
})
export class ProjectModalComponent implements OnInit {

  projectForm: FormGroup;
  projectName = new FormControl('', [Validators.required, Validators.pattern('^[a-zA-Z](?:-?[a-zA-Z0-9]+)*')]);
  projectKey = new FormControl(
    '',
    [Validators.required,
      Validators.pattern('^[A-Z]*'),
      Validators.minLength(3),
      Validators.maxLength(5)]
  );


  constructor() {
    this.projectForm = new FormGroup({
      projectName: this.projectName,
      projectKey: this.projectKey
    });
  }

  ngOnInit(): void {
  }

  create(): void{

  }

  getProjectNameErrorMessage(): string {

    if (this.projectName.hasError('required')) {
      return 'You must enter a value';
    }
    return (this.projectName.hasError('pattern'))
      ? 'Project name should start with latin alphabet letters(case insensitive), can contain numbers and dash(inside)'
      : '';
  }
  getProjectKeyErrorMessage(): string {
    if (this.projectKey.hasError('required')) {
      return 'You must enter a value';
    }
    else if (this.projectKey.hasError('minLength')) {
      return 'Min length 3 characters';
    }
    else if (this.projectKey.hasError('maxLength')) {
      return 'Max length 5 characters';

    }
    return (this.projectKey.hasError('pattern'))
      ? 'Key name should contain only latin alphabet letters in upper case.'
      : '';
  }
  keyToUpperCase(): void {
    this.projectKey.setValue(this.projectKey.value.toUpperCase());
  }

  setAutoGeneratedKeyValue(): void {

    const pName = this.projectName.value.toString();
    const chars = pName.replace(/[^a-zA-Z]+/g, '');
    if (chars.length > 2) {
      console.log(chars);

      this.projectKey.setValue(chars.toUpperCase().substring(0, 5));
    }
  }
}
